#%RAML 1.0
title: SaveYourSpotAPI
version: 1.0.0
baseUri: http://localhost:6789
mediaType: application/json

securitySchemes:
    x-JWTauth:
      description: JWT authentication
      type: x-JWTauth
      describedBy:
        headers:
          Authorization:
            description: Once authenticated an HTTP-only cookie with the JWT is created.
            type: string
        responses:
          401:
            description: Invalid or expired token, authenticate again
          403:
            description: You don't have access to this resource


# -- Types --
types:
    isValid:
        type: object
        properties:
            ok:
                type: boolean
                required: true
            error:
                type: string

    # -- /users requests -- #
    LoginUser:
        type: object
        properties:
            email:
                type: string
                required: true
            password:
                type: string
                required: true

    RegisterUser:
        type: object
        description: Register a new user. Either phoneNumber or email must be present
        properties:
            firstName:
                type: string
                required: true
            lastName:
                type: string
                required: true
            birthDate:
                type: date-only
                required: true
            email:
                type: string
                required: true
            password:
                type: string
                required: true
            phoneNumber:
                type: string
                required: true

    EditUser:
        type: object
        description: Edit user data. To edit the birthDate the user will have to contact support
        properties:
            firstName:
                type: string
            lastName:
                type: string
            email:
                type: string
            password:
                type: string
            phoneNumber:
                type: string

    NewReservation:
        type: object
        description: DOW is the day of the week (0->6) for easy scheduling, startTime is in minutes from 00:00
        properties:
            roomId:
                type: string
                required: true
            startDate:
                type: date-only
                required: true
            DOW:
                type: number
                required: true
            startTime:
                type: number
                required: true

    # -- /users responses -- #

    BasicUser:
        type: object
        description: Returned after a successful login, contains only the firstName to display
        properties:
            firstName:
                type: string
                required: true

    User:
        type: object
        description: Returned when hitting /profile to give all the users info that can be edited
        properties:
            firstName:
                type: string
                required: true
            lastName:
                type: string
                required: true
            email:
                type: string
                required: true
            phoneNumber:
                type: string
                required: true

    Reservation:
        type: object
        properties:
            UUID:
                type: string
                required: true
            roomId:
                type: string
                required: true
            creationDate:
                type: datetime
                required: true
            startDate:
                type: datetime
                required: true
            duration:
                type: number
                required: true
            isValid:
                type: number
                required: true


# -- Room -- #
    Org:
        type: object
        properties:
            name:
                type: string
            UUID:
                type: string

    GeneralInfo:
        type: object
        properties:
            totalRooms:
                type: number
            totalOrgs:
                type: number
            orgs: Org[]

    Room:
        type: object
        properties:
            name:
                type: string
            location:
                type: string
            totalPlaces:
                type: number

    RegisterRoom:
        type: object
        properties:
            title:
                type: string
                required: true
            location:
                type: string
                required: true
            totalPlaces:
                type: number
                required: true

    EditRoom:
        type: object
        properties:
            title:
                type: string
                required: false
            location:
                type: string
                required: false
            totalPlaces:
                type: number
                required: false


# -- EndPoints -- #
/users:
    # TODO: remove me
    get:
        description: List all users
        securedBy: x-JWTauth
        responses:
            200:
                body: User[]

    /login:
        post:
            description: Login to existing user
            body: LoginUser
            responses:
                200:
                    body: BasicUser

    /signup:
        post:
            description: Create new user
            body: RegisterUser
            responses:
                200:
                    body: isValid
                400:
                    body: isValid

    /checkEmail/{email}:
        post:
            description: check if email already exist
            responses:
                200:
                    body: isValid
                400:
                    body: isValid

    /profile:
        securedBy: x-JWTauth

        get:
            description: Get user info
            responses:
                200:
                    body: User

        put:
            description: Edit user info
            body: EditUser
            responses:
                200:
                    body: isValid
                400:
                    body: isValid

        delete:
            description: Remove user and all his reservations
            responses:
                200:
                    body: isValid
                400:
                    body: isValid

        /reservations:
            securedBy: x-JWTauth

            get:
                description: See all my reservations
                responses:
                    200:
                        body: Reservation[]

            post:
                description: Add new reservation
                body: NewReservation
                responses:
                    200:
                        body: isValid
                    400:
                        body: isValid

        /reservations/{reservationId}:
            securedBy: x-JWTauth

            put:
                description: Edit reservation
                #body: EditReservation

            delete:
                description: Cancel reservation




/rooms:
    get:
        description: List organizations and general info
        responses:
            200:
                body:
                    application/json:
                        type: GeneralInfo


    /{orgId}:
        get:
            description: List all rooms of the organization defined by orgId
            responses:
                200:
                    body:
                        application/json:
                            type: Room[]

    /details/{roomId}:
        get:
            description: Get all the details of a specified room
            responses:
                200:
                    body:
                        application/json:
                            #type: RoomInfo
